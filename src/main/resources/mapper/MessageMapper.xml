<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wangchu.dao.mapper.MessageMapper">

    <sql id="selectField">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <sql id="insertField">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>

    <select id="selectConversationsByUser" resultType="Message">
        select <include refid="selectField"/> from message
        where id in
        (select max(id) as maxid from message
        where from_id!=1 and status!=2
        and (from_id=#{userId} or to_id=#{userId})
        group by conversation_id)
        order by id desc limit #{offset},#{limit}
    </select>

    <select id="selectConversationCount" resultType="int">
        select count(id) from message
        where id in
        (select max(id) as maxid from message
        where from_id!=1 and status!=2
        and (from_id=#{userId} or to_id=#{userId})
        group by conversation_id)
    </select>

    <select id="selectConversationUnreadCount" resultType="int">
        select count(id) from message
        where from_id!=1 and status!=2
        and conversation_id=#{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="int">
        select count(id) from message
        where from_id!=1 and status=0
        and to_id=#{userId}
        <if test="conversationId!=null">and conversation_id=#{conversationId}</if>
    </select>

    <select id="selectLettersByConversationId" resultType="Message">
        select <include refid="selectField"/> from message
        where from_id!=1 and status!=2
        and conversation_id = #{conversationId}
        order by id desc limit #{offset},#{limit}
    </select>

    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into message(<include refid="insertField"/>)
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateLetterRead">
        update message set status=#{status}
        where id in
        <foreach collection="ids" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </update>

    <select id="findLatestTopicMessage" resultType="Message">
        select <include refid="selectField"/> from message where id in
        (select max(id) from message
        where from_id=1 and status!=2
        and conversation_id = #{topic}
        and to_id=#{userId});
    </select>

    <select id="findTopicMessageNum" resultType="int">
        select count(id) from message
        where from_id=1 and status!=2
        and conversation_id = #{topic}
        and to_id=#{userId};
    </select>

    <select id="findUnreadTopicNum" resultType="int">
        select count(id) from message
        where from_id=1 and status=0
        and to_id=#{userId}
        <if test="topic!=null">
            and conversation_id = #{topic}
        </if>
    </select>

    <select id="findTopicMessage" resultType="Message">
        select <include refid="selectField"/> from message
        where from_id=1 and status!=2
        and to_id=#{userId}
        <if test="topic!=null">
            and conversation_id = #{topic}
        </if>
         order by create_time desc limit #{offset},#{limit}
    </select>


</mapper>